{% set base_dd_tags = "env:" ~ global.environmentName ~ ", service: river-node" %}


image:
  pullPolicy: "{{ riverNode.image.pullPolicy | default('IfNotPresent') }}"

apm:
  enabled: {{ riverNode.apmEnabled | default('false') | lower }}

nodes:
  {% for i in range(1, riverNode.numStreamNodes + 1) %}
  {% set host_name = "river" ~ i ~ ".nodes." ~ global.environmentName ~ ".towns.com" %}
  {% set node_url = "https://" ~ host_name %}

  - nodeType: stream
    nodeNumber: {{ i }}
    hostname: {{ host_name }}
    runMode: full
    standbyOnStart: true
    dbUser: river{{ i }}
    ddTags: "{{ base_dd_tags}}, mode: stream, node_url: {{ node_url }}"
    nodeUrl: {{ node_url }}
    migrationStatus: {{ riverNode.migrationStatus.stream[i] if riverNode.migrationStatus and riverNode.migrationStatus.stream and i in riverNode.migrationStatus.stream else 'done' }}
    image: 
      tag: "{{ riverNode.imageTagOverride.stream[i] if riverNode.imageTagOverride and riverNode.imageTagOverride.stream and i in riverNode.imageTagOverride.stream else riverNode.image.tag }}"
  {% endfor %}
  {% for i in range(1, riverNode.numArchiveNodes + 1) %}
  {% set host_name = "archive" ~ i ~ ".nodes." ~ global.environmentName ~ ".towns.com" %}
  {% set node_url = "https://" ~ host_name %}
  - nodeType: archive
    nodeNumber: {{ i }}
    hostname: {{ host_name }}
    runMode: archive
    standbyOnStart: false
    dbUser: archive{{ i }}
    ddTags: "{{ base_dd_tags}}, mode: archive, node_url: {{ node_url }}"
    nodeUrl: {{ node_url }}
    migrationStatus: {{ riverNode.migrationStatus.archive[i] if riverNode.migrationStatus and riverNode.migrationStatus.archive and i in riverNode.migrationStatus.archive else 'done' }}
    image:
      tag: "{{ riverNode.imageTagOverride.archive[i] if riverNode.imageTagOverride and riverNode.imageTagOverride.archive and i in riverNode.imageTagOverride.archive else riverNode.image.tag }}"
  {% endfor %}

race: {{ riverNode.race | default('false') | lower }}

logLevel: {{ riverNode.logLevel | default('info') | lower }}

resources: 
{{ riverNode.resources | default({
  "limits": {
    "cpu": 0.5,
    "memory": "1G"
  },
  "requests": {
    "cpu": 0.5,
    "memory": "1G"
  }
}) | to_yaml | indent(2, True) }}

riverRegistryPageSize: {{ riverNode.riverRegistryPageSize | default(5000) }}
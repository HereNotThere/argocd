{% set base_dd_tags = "env:" ~ global.environmentName ~ ", service: subgraph" %}

nodeEnv: "{{ subgraph.nodeEnv | default('production') }}"

ponderStartBlock: "{{ subgraph.ponderStartBlock }}"

podAnnotations:
  ad.datadoghq.com/subgraph.logs: '[{"service": "subgraph"}]'

image:
  repository: "{{ subgraph.image.repository | default('public.ecr.aws/h5v6m2x1/subgraph') }}"
  tag: "{{ subgraph.image.tag | default('latest') }}"
  pullPolicy: "{{ subgraph.image.pullPolicy | default('IfNotPresent') }}"

service:
  type: ClusterIP
  port: 80
  targetPort: 42069

secrets:
  name: "{{ subgraph.secrets.name | default('subgraph-secrets') }}"

resources:
  limits:
    cpu: {{ subgraph.resources.limits.cpu | default(1) }}
    memory: {{ subgraph.resources.limits.memory | default('4Gi') }}
  requests:
    cpu: {{ subgraph.resources.requests.cpu | default(1) }}
    memory: {{ subgraph.resources.requests.memory | default('4Gi') }}

# Health checks
# livenessProbe:
#   httpGet:
#     path: /health
#     port: 42069
#   initialDelaySeconds: 30
#   periodSeconds: 10

readinessProbe:
  httpGet:
    path: /ready
    port: 42069
  initialDelaySeconds: 30
  periodSeconds: 10

# Security settings
podSecurityContext:
  fsGroup: 1000

securityContext:
  {}

# Node selector, affinity, and tolerations for pod assignment
nodeSelector: {}
tolerations: []
affinity: {}
{{- range .Values.nodes }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: river-node-{{ .nodeType }}-{{ .nodeNumber }}
  namespace: {{ $.Release.Namespace }}
spec:
  # TODO: use rolling update strategy
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: river-node-{{ .nodeType }}-{{ .nodeNumber }}
  template:
    # TODO: add logging
    metadata:
      labels:
        app: river-node-{{ .nodeType }}-{{ .nodeNumber }}
    spec:
      containers:
        - name: river-node
          image: public.ecr.aws/h5v6m2x1/river:dev # TODO: make the image tag configurable
          ports:
            - containerPort: 443
              name: https
            - containerPort: 8081
              name: metrics
            - containerPort: 8082
              name: pprof
          env:
            - name: WALLETPRIVATEKEY
              valueFrom:
                secretKeyRef:
                  name: river-node-{{ .nodeType }}-{{ .nodeNumber }}-credentials
                  key: wallet_private_key
            - name: DATABASE__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: river-node-{{ .nodeType }}-{{ .nodeNumber }}-credentials
                  key: db_password
            - name: DATABASE__HOST
              valueFrom:
                secretKeyRef:
                  name: river-node-{{ .nodeType }}-{{ .nodeNumber }}-credentials
                  key: db_host
            - name: ARCHITECTCONTRACT__ADDRESS
              value: {{ required "spaceArchitect contract address required" $.Values.global.chains.base.contractAddresses.spaceArchitect }}
            - name: WALLET_LINK_CONTRACT__ADDRESS
              value: {{ required "baseRegistry contract address required" $.Values.global.chains.base.contractAddresses.spaceArchitect }}
            - name: REGISTRYCONTRACT__ADDRESS
              value: {{ required "riverRegistry contract address required" $.Values.global.chains.river.contractAddresses.riverRegistry }}
            - name: ENTITLEMENT_CONTRACT__ADDRESS
              value: {{ required "baseRegistry contract address required" $.Values.global.chains.base.contractAddresses.baseRegistry }}
            - name: DATABASE__USER
              value: {{ .dbUser }}
            - name: DATABASE__PORT
              value: "5432"
            - name: DATABASE__DATABASE
              value: river
            - name: DATABASE__EXTRA
              value: "?sslmode=disable&pool_max_conns=50"
            - name: ARCHITECTCONTRACT__VERSION
              value: "v3"
            - name: WALLETLINKCONTRACT__VERSION
              value: "v3"
            - name: TLSCONFIG__CERT
              valueFrom:
                secretKeyRef:
                  name: river-node-wildcard-tls
                  key: tls.crt
            - name: TLSCONFIG__KEY
              valueFrom:
                secretKeyRef:
                  name: river-node-wildcard-tls
                  key: tls.key
            - name: CHAINSSTRING
              valueFrom:
                secretKeyRef:
                  name: river-node-{{ .nodeType }}-{{ .nodeNumber }}-credentials
                  key: chains_string
            - name: RUN_MODE
              value: {{ .runMode }}
            - name: ENABLEDEBUGENDPOINTS
              value: "true"
            - name: BASECHAIN__CHAINID
              value: {{ required "base chainId required" $.Values.global.chains.base.chainId | quote }}
            - name: RIVERCHAIN__CHAINID
              value: {{ required "river chainId required" $.Values.global.chains.river.chainId | quote }}
            - name: BASECHAIN__NETWORKURL
              valueFrom:
                secretKeyRef:
                  name: river-node-{{ .nodeType }}-{{ .nodeNumber }}-credentials
                  key: base_chain_rpc_url
            - name: RIVERCHAIN__NETWORKURL
              valueFrom:
                secretKeyRef:
                  name: river-node-{{ .nodeType }}-{{ .nodeNumber }}-credentials
                  key: river_chain_rpc_url
            - name: SCRUBBINGCONFIG__SCRUBELIGIBLEDURATION
              value: "3600000000000"
            - name: DATABASE__MIGRATESTREAMCREATION
              value: "true"
            - name: METRICS__ENABLED
              value: "true"
            - name: PORT
              value: "443"
            - name: METRICS__PORT
              value: "8081"
            - name: STORAGE_TYPE
              value: "postgres"
            - name: SKIP_GENKEY
              value: "true"
            - name: LOG__FORMAT
              value: "json"
            - name: LOG__LEVEL
              value: "info"
            - name: LOG__NOCOLOR
              value: "true"
            - name: RIVER_DATABASE_ISOLATIONLEVEL
              value: "READ COMMITTED"
            - name: STANDBYONSTART
              value: {{ .standbyOnStart | quote }}
            - name: RIVER_PERFORMANCETRACKING_TRACINGENABLED
              value: "true"
            - name: RIVER_PERFORMANCETRACKING_OTLPENABLEGRPC
              value: "true"
            - name: RIVER_PERFORMANCETRACKING_OTLPINSECURE
              value: "true"
            - name: ENABLEMLS
              value: "false" 
            {{- if eq .nodeType "archive" }}
            - name: ARCHIVE__ARCHIVEID
              value: "true"
            {{- end }}
            # TODO: make sure dd_oltp is setup and accepting connections at :4317
            
            # TODO: if archive node, add prometheus annotations (archive_node_docker_labels on terraform)
---

{{- end }}
{{- range .Values.nodes }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: river-node-{{ .nodeType }}-{{ .nodeNumber }}
  namespace: {{ $.Release.Namespace }}
spec:
  # TODO: use rolling update strategy
  strategy:
    type: Recreate
  replicas: {{ if eq .migrationStatus "done" }}1{{ else }}0{{ end }}
  selector:
    matchLabels:
      app: river-node-{{ .nodeType }}-{{ .nodeNumber }}
  template:
    metadata:
      labels:
        app: river-node-{{ .nodeType }}-{{ .nodeNumber }}
      annotations:
        ad.datadoghq.com/river-node.logs: '[{"source": "kubernetes", "service": "river-node", "tags": ["node_url:https://{{ .hostname }}"]}]'
        ad.datadoghq.com/river-node.tags: '[{"key": "node_url", "value": "https://{{ .hostname }}"}]'
        {{- if eq .nodeType "archive" }}
        ad.datadoghq.com/river-node.instances: >
          [
            {
              "prometheus_url": "http://%%host%%:8081/metrics",
              "namespace": "archive_node",
              "metrics": ["*"]
            }
          ]
        {{- end }}
    spec:
      containers:
        - name: river-node
          image: public.ecr.aws/h5v6m2x1/river:{{ .image.tag }}
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          resources:
            {{- toYaml $.Values.resources | nindent 12 }}
          ports:
            - containerPort: 443
              name: https
            - containerPort: 8081
              name: metrics
            - containerPort: 8082
              name: pprof
          # TODO: add liveness and readiness probes
          volumeMounts:
            - name: tls-secret
              mountPath: /etc/tls-secret
              readOnly: true
          env:
            - name: WALLETPRIVATEKEY
              valueFrom:
                secretKeyRef:
                  name: river-node-{{ .nodeType }}-{{ .nodeNumber }}-credentials
                  key: wallet_private_key
            - name: DATABASE__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: river-node-{{ .nodeType }}-{{ .nodeNumber }}-credentials
                  key: target_db_app_password
            - name: DATABASE__HOST
              valueFrom:
                secretKeyRef:
                  name: river-node-{{ .nodeType }}-{{ .nodeNumber }}-credentials
                  key: target_db_host
            - name: ARCHITECTCONTRACT__ADDRESS
              value: {{ required "spaceArchitect contract address required" $.Values.global.chains.base.contractAddresses.spaceArchitect }}
            - name: REGISTRYCONTRACT__ADDRESS
              value: {{ required "riverRegistry contract address required" $.Values.global.chains.river.contractAddresses.riverRegistry }}
            - name: ENTITLEMENT_CONTRACT__ADDRESS
              value: {{ required "baseRegistry contract address required" $.Values.global.chains.base.contractAddresses.baseRegistry }}
            {{- with $.Values.global.chains.base.contractAddresses.appRegistry }}
            - name: APPREGISTRYCONTRACT__ADDRESS
              value: {{ . }}
            {{- end }}
            - name: DATABASE__USER
              value: {{ .dbUser }}
            - name: DATABASE__PORT
              value: "5432"
            - name: DATABASE__DATABASE
              value: river
            - name: DATABASE__EXTRA
              value: "?sslmode=disable&pool_max_conns=50"
            - name: ARCHITECTCONTRACT__VERSION
              value: "v3"
            - name: WALLETLINKCONTRACT__VERSION
              value: "v3"
            - name: TLSCONFIG__CERT
              value: /etc/tls-secret/tls.crt
            - name: TLSCONFIG__KEY
              value: /etc/tls-secret/tls.key
            - name: CHAINSSTRING
              valueFrom:
                secretKeyRef:
                  name: river-node-{{ .nodeType }}-{{ .nodeNumber }}-credentials
                  key: chains_string
            - name: RUN_MODE
              value: {{ .runMode }}
            - name: ENABLEDEBUGENDPOINTS
              value: "true"
            - name: BASECHAIN__CHAINID
              value: {{ required "base chainId required" $.Values.global.chains.base.chainId | quote }}
            - name: RIVERCHAIN__CHAINID
              value: {{ required "river chainId required" $.Values.global.chains.river.chainId | quote }}
            - name: BASECHAIN__NETWORKURL
            {{- if eq $.Values.useRpcGateway true }}
              value: "http://rpc-gateway:8080/nodes/{{ $.Values.global.chains.base.chainId }}"
            {{- else }}
              valueFrom:
                secretKeyRef:
                  name: river-node-{{ .nodeType }}-{{ .nodeNumber }}-credentials
                  key: base_chain_rpc_url
            {{- end }}
            - name: RIVERCHAIN__NETWORKURL
              valueFrom:
                secretKeyRef:
                  name: river-node-{{ .nodeType }}-{{ .nodeNumber }}-credentials
                  key: river_chain_rpc_url
            - name: SCRUBBINGCONFIG__SCRUBELIGIBLEDURATION
              value: "3600000000000"
            - name: DATABASE__MIGRATESTREAMCREATION
              value: "true"
            - name: METRICS__ENABLED
              value: "true"
            - name: PORT
              value: "443"
            - name: METRICS__PORT
              value: "8081"
            - name: STORAGE_TYPE
              value: "postgres"
            - name: SKIP_GENKEY
              value: "true"
            - name: LOG__FORMAT
              value: "json"
            - name: LOG__LEVEL
              value: {{ $.Values.logLevel | quote }}
            - name: LOG__NOCOLOR
              value: "true"
            - name: RIVER_DATABASE_ISOLATIONLEVEL
              value: "READ COMMITTED"
            - name: STANDBYONSTART
              value: {{ .standbyOnStart | quote }}
            - name: PERFORMANCETRACKING__PROFILINGENABLED
              value: "false"
            - name: RIVER_PERFORMANCETRACKING_TRACINGENABLED
              value: {{ $.Values.apm.enabled | quote }}
            - name: RIVER_PERFORMANCETRACKING_OTLPENABLEGRPC
              value: "true"
            - name: RIVER_PERFORMANCETRACKING_OTLPINSECURE
              value: "true"
            - name: DD_TAGS
              value: {{ .ddTags | quote }}
            - name: DD_AGENT_HOST
              value: "datadog.datadog.svc.cluster.local"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://datadog.datadog:4317"
            - name: ENABLEMLS
              value: "false" 
            - name: RACE
              value: "{{ $.Values.race }}"
            {{- if eq .nodeType "archive" }}
            - name: ARCHIVE__ARCHIVEID
              value: {{ .nodeNumber | quote }}
            {{- end }}
            - name: RIVER_RIVERREGISTRY_PAGESIZE
              value: {{ required "riverRegistryPageSize is required" $.Values.riverRegistryPageSize | quote }}
            - name: RIVER_RIVERREGISTRY_PARALLELREADERS
              value: "10"
            {{- if $.Values.gotraceback }}
            - name: GOTRACEBACK
              value: {{ $.Values.gotraceback | quote }}
            - name: TOWNS_GOTRACEBACK
              value: {{ $.Values.gotraceback | quote }}
            {{- end }}
      restartPolicy: {{ .restartPolicy | default "Always" }}
      volumes:
        - name: tls-secret
          secret:
            secretName: river-node-wildcard-tls
---

{{- end }}